import requests
import os

def query_vectors(id, url="http://localhost:8080/query", index_type="HNSWFLAT"):
    """
    根据id查询向量

    :param id: 要查询的向量id
    :param url: 查询向量的URL
    :param index_type: 索引类型
    """
    payload = {
        "operation": "query",
        "id": id,
        "index_type": index_type
    }
    try:
        response = requests.post(url, json=payload)
        if response.status_code == 200:
            print(f"search vector ID {id} successfully.")
            print({response.content})
        else:
            print(f"Failed to search vector ID {id}. Status code: {response.status_code}, Response: {response.text}")
    except requests.RequestException as e:
        print(f"Error inserting vector ID {id}: {e}")

def search_vectors(vector, k, url="http://localhost:8080/search", index_type="HNSWFLAT"):
    """
    根据id查询向量

    :param id: 要查询的向量id
    :param url: 查询向量的URL
    :param index_type: 索引类型
    """
    payload = {
        "operation": "search",
        "vector": vector,
        "k": k,
        "index_type": index_type
    }
    try:
        response = requests.post(url, json=payload)
        if response.status_code == 200:
            print(f"search vector {vector} successfully.")
            print({response.content})
        else:
            print(f"Failed to search vector {vector}. Status code: {response.status_code}, Response: {response.text}")
    except requests.RequestException as e:
        print(f"Error inserting vector {vector}: {e}")

if __name__ == "__main__":
    query_vectors(1)
    # vector = [0.0991782769560814,0.571054220199585,0.6081299185752869,0.6336538791656494,0.5048009753227234,0.6564013361930847,0.5965023040771484,0.6356955170631409,0.6689209342002869,0.9706127643585204,0.8031316995620728,0.27323880791664124,0.023257475346326828,0.28694066405296326,0.043286871165037155,0.3601219356060028,0.5222481489181519,0.07801233977079391,0.4071140885353088,0.0006174409645609558,0.5001140236854553,0.431806355714798,0.12943953275680542,0.9186747074127196,0.016293348744511604,0.23836611211299896,0.566602885723114,0.4487264156341553,0.26529401540756226,0.7348551154136658,0.750236988067627,0.9327608942985536,0.6246981024742126,0.418153315782547,0.6079515814781189,0.11828025430440904,0.40999579429626465,0.1589156687259674,0.3328786790370941,0.7377374172210693,0.36240413784980774,0.3872529864311218,0.764572262763977,0.9368271231651306,0.42826902866363525,0.633090615272522,0.8046616911888123,0.9049330949783324,0.6393278241157532,0.34131520986557007,0.947758138179779,0.5129944682121277,0.5336193442344666,0.20135922729969025,0.06624054908752441,0.7946522831916809,0.3895624279975891,0.8762307167053223,0.900583028793335,0.6055246591567993,0.9518977403640748,0.2087133228778839,0.9964451193809508,0.2631935775279999,0.863991916179657,0.6219503283500671,0.2195245772600174,0.2276093363761902,0.9355357885360718,0.32286813855171204,0.01398138701915741,0.014649190939962864,0.17197151482105255,0.9324525594711304,0.18499258160591123,0.7255073189735413,0.43315044045448303,0.8092576265335083,0.24042299389839172,0.6446048617362976,0.9522106051445008,0.6359870433807373,0.28819242119789124,0.3943351209163666,0.008720135316252708,0.03117186389863491,0.4198305606842041,0.41794049739837646,0.6819383502006531,0.5191320776939392,0.21306394040584564,0.2750686705112457,0.3135755956172943,0.5608037710189819,0.9079810380935668,0.9831282496452332,0.6563666462898254,0.10137029737234116,0.2430656999349594,0.7467267513275146]
    # search_vectors(vector, k=5)